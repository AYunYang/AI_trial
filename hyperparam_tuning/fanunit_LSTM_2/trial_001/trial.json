{"trial_id": "001", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "units_lstm", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "l2_lstm", "default": 0.001, "conditions": [], "min_value": 0.001, "max_value": 0.1, "step": 0.001, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "return_sequences", "default": false, "conditions": []}}, {"class_name": "Float", "config": {"name": "dropout_lstm", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_dense", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "l2_dense", "default": 0.001, "conditions": [], "min_value": 0.001, "max_value": 0.1, "step": 0.001, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.001, 0.0001], "ordered": true}}], "values": {"units_lstm": 96, "l2_lstm": 0.07300000000000001, "return_sequences": true, "dropout_lstm": 0.0, "units_dense": 32, "l2_dense": 0.079, "learning_rate": 0.0001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\yy\\anaconda3\\envs\\yy_1\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\yy\\anaconda3\\envs\\yy_1\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yy\\anaconda3\\envs\\yy_1\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yy\\anaconda3\\envs\\yy_1\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yy\\anaconda3\\envs\\yy_1\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\yy\\anaconda3\\envs\\yy_1\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\yy\\anaconda3\\envs\\yy_1\\Lib\\site-packages\\keras\\src\\backend\\tensorflow\\nn.py\", line 587, in categorical_crossentropy\n    raise ValueError(\nValueError: Arguments `target` and `output` must have the same shape. Received: target.shape=(None, 1, 80), output.shape=(None, 1, 24)\n"}